---
title: Cheatsheet
format: html
description: The main R functions used in the workshop. 
execute:
  eval: false
---



## Parametric distributions


Name | Density function | Distribution function | Quantile function | Random number generator
--- | --- | --- | --- | ---
Binomial | `dbinom` | `pbinom` | `qbinom` | `rbinom`
Normal | `dnorm` | `pnorm` | `qnorm` | `rnorm`
Student's t | `dt` | `pt` | `qt` | `rt`
Uniform | `dunif` | `punif` | `qunif` | `runif`
F | `df` | `pf` | `qf` | `rf`
Chi-squared | `dchisq` | `pchisq` | `qchisq` | `rchisq`


## Statistical inference

### For Binomial proportions 

For `x` observed number of successes and `n` number of trials:


```{r}
binom.test(x, n, p = 0.5, alternative = "two.sided")$p.value
binom.test(x, n, conf.level = 0.95)$conf.int
```

### For means

#### One-sample

```{r}
t.test(x, mu = 0, alternative = "two.sided")$p.value
t.test(x, mu = 0, conf.level = 0.95)$conf.int
```

#### Two-sample

```{r}
t.test(x, y, alternative = "two.sided")$p.value
t.test(x, y, conf.level = 0.95)$conf.int
t.test(x, y, var.equal = FALSE) # unequal variance (default)
t.test(x, y, var.equal = TRUE) # equal variance
```

#### Paired

```{r}
t.test(x - y, alternative = "two.sided")
t.test(x, y, alternative = "two.sided", paired = TRUE)
```

## Exploring multivariate data 

```{r}
res <- correlation::correlation(data)
summary(res)
plot(res)
plot(summary(res))
GGally::ggpairs(data)
```

## Linear regression

- `x1` and `x2` are continuous variables
- `f1` and `f2` are factors
- `y` is the response variable
- `data` is a data frame with all of the above variables

### Model fit, summary, and diagnostics

```{r}
fit <- lm(y ~ x1 + x2 + x1:x2, data = data)
```

```{r}
coef(fit)
residuals(fit)
deviance(fit)
sigma(fit)
summary(fit)
cooks.distance(fit)
influence.measures(fit)
influence(fit)
```

A tidy approach:

```{r}
broom::tidy(fit)
broom::glance(fit)
broom::augment(fit)
ggResidpanel::resid_panel(fit)
```

### ANOVA (regression with categorical predictors)

```{r}
fit1 <- lm(y ~ f1 + f2 + f1:f2, data = data)
anova(fit1)
fit2 <- aov(y ~ f1 + f2 + f1:f2, data = data)
summary(fit2)
emm <- emmmeans::emmeans(fit1, "f1")
pairs(emm)
plot(emm)
```

### Chi-square test 

```{r}
chisq.test(table(x))

M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
dimnames(M) <- list(gender = c("F", "M"),
                    party = c("Democrat","Independent", "Republican"))
(Xsq <- chisq.test(M))  # Prints test summary
Xsq$observed   # observed counts (same as M)
Xsq$expected   # expected counts under the null
Xsq$residuals  # Pearson residuals
Xsq$stdres     # standardized residuals
```


### Logistic regression

```{r}
fit <- glm(y ~ x1 + x2 + x1:x2, data = data, family = binomial)
```



## Reporting results 

```{r}
modelsummary::datasummary((mean + sd) * len ~ factor(dose)* supp, data = ToothGrowth)
modelsummary::modelsummary(fit)
modelsummary::modelplot(fit)
modelsummary::modelsummary(list("M1" = fit1, "M2" = fit2))
```


